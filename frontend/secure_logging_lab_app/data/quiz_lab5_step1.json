{
  "questions": [
    {
      "question": "What is the primary purpose of using Morgan in this Express.js application?",
      "choices": [
        "For database management",
        "For secure logging",
        "For user authentication",
        "For route handling"
      ],
      "answer": "For secure logging",
      "explanation": "Morgan is used in this project to apply secure logging practices in the Express.js application, allowing for structured and customizable logging of HTTP requests and responses."
    },
    {
      "question": "Which module is used to create a rotating log file stream?",
      "choices": [
        "fs",
        "path",
        "morgan",
        "rotating-file-stream"
      ],
      "answer": "rotating-file-stream",
      "explanation": "The rotating-file-stream module is used to create a rotating log stream, which helps manage log size by creating new log files at specified intervals."
    },
    {
      "question": "What is the purpose of creating a custom token for exception logging?",
      "choices": [
        "To encrypt log messages",
        "To include error messages in logs",
        "To validate user input",
        "To compress log files"
      ],
      "answer": "To include error messages in logs",
      "explanation": "The custom token for exception logging allows the inclusion of error messages (stored in res.locals.errorMessage) in the log entries, providing more detailed information about exceptions."
    },
    {
      "question": "How often are the log files rotated in this setup?",
      "choices": [
        "Every 6 hours",
        "Every 12 hours",
        "Every 24 hours",
        "Every week"
      ],
      "answer": "Every 12 hours",
      "explanation": "The rotating log stream is set up with an interval of '12h', meaning new log files are created every 12 hours."
    },
    {
      "question": "What format is used for structuring the log entries?",
      "choices": [
        "XML",
        "CSV",
        "JSON",
        "Plain text"
      ],
      "answer": "JSON",
      "explanation": "The custom log format 'jsonFormat' is defined to structure log entries in JSON format, including method, URL, IP, and exceptions."
    },
    {
      "question": "Where are the log files stored in this project?",
      "choices": [
        "In the root directory",
        "In a 'log' subdirectory",
        "In the 'controller' directory",
        "In the system's temp directory"
      ],
      "answer": "In a 'log' subdirectory",
      "explanation": "The log files are stored in a 'log' subdirectory, which is created if it doesn't exist using fs.mkdirSync(logDirectory)."
    },
    {
      "question": "What is the purpose of setting res.locals.errorMessage in the route handlers?",
      "choices": [
        "To display errors to users",
        "To log exceptions",
        "To trigger error handling middleware",
        "To send error responses"
      ],
      "answer": "To log exceptions",
      "explanation": "Setting res.locals.errorMessage in route handlers allows the custom exception token to capture and include error messages in the log entries."
    },
    {
      "question": "Which of the following is NOT included in the custom JSON log format?",
      "choices": [
        "HTTP method",
        "URL",
        "IP address",
        "Response status code"
      ],
      "answer": "Response status code",
      "explanation": "The custom JSON log format includes method, URL, IP, and exceptions, but does not explicitly include the response status code."
    },
    {
      "question": "What is the purpose of intentionally setting wrong credentials in databaseConfig.js?",
      "choices": [
        "To test database security",
        "To simulate an exception for logging",
        "To bypass authentication",
        "To stress test the server"
      ],
      "answer": "To simulate an exception for logging",
      "explanation": "Setting incorrect database credentials is done to simulate an error, allowing testing of the exception logging functionality."
    },
    {
      "question": "What security consideration is mentioned regarding log exposure?",
      "choices": [
        "Logs should always be encrypted",
        "Logs may contain sensitive information",
        "Logs should be publicly accessible",
        "Logs should be deleted immediately"
      ],
      "answer": "Logs may contain sensitive information",
      "explanation": "The lab mentions that exposing logs improperly may leak sensitive information, highlighting the importance of secure log management."
    }
  ]
}