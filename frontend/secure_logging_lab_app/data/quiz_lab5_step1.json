Here are 10 multiple-choice questions based on the provided lab content:

{
  "questions": [
    {
      "question": "What is the primary purpose of using Morgan in this lab?",
      "choices": ["For database management", "For secure logging", "For user authentication", "For server-side rendering"],
      "answer": "For secure logging",
      "explanation": "The lab demonstrates how to apply secure logging practices in an Express.js application using Morgan."
    },
    {
      "question": "Which npm package is used to create rotating log files?",
      "choices": ["morgan", "fs", "path", "rotating-file-stream"],
      "answer": "rotating-file-stream",
      "explanation": "The rotating-file-stream package is used to create a new log file periodically, helping manage log size and prevent log overflow."
    },
    {
      "question": "What is the interval set for rotating log files in this lab?",
      "choices": ["6 hours", "12 hours", "24 hours", "48 hours"],
      "answer": "12 hours",
      "explanation": "The lab sets up a rotating log stream with a 12-hour interval using the line: interval: '12h'."
    },
    {
      "question": "Which of the following is NOT a module imported for logging setup?",
      "choices": ["fs", "path", "express", "rotating-file-stream"],
      "answer": "express",
      "explanation": "The lab imports fs, path, and rotating-file-stream for logging setup, but express is not specifically mentioned for this purpose."
    },
    {
      "question": "What format is used for structuring log entries in this lab?",
      "choices": ["XML", "YAML", "JSON", "Plain text"],
      "answer": "JSON",
      "explanation": "The lab defines a custom JSON format for log entries, including method, URL, IP, and exceptions."
    },
    {
      "question": "What custom token is created for exception logging?",
      "choices": ["error", "exception", "log", "errorMessage"],
      "answer": "exception",
      "explanation": "The lab creates a custom token named 'exception' for logging error messages."
    },
    {
      "question": "How is an exception simulated in the lab?",
      "choices": ["By creating a syntax error", "By setting wrong database credentials", "By overloading the server", "By deleting essential files"],
      "answer": "By setting wrong database credentials",
      "explanation": "The lab instructs to edit databaseConfig.js and intentionally set wrong credentials to simulate an error."
    },
    {
      "question": "Where are the log files stored in the project structure?",
      "choices": ["In the root directory", "In a 'logs' folder", "In a 'log' folder", "In the 'src' folder"],
      "answer": "In a 'log' folder",
      "explanation": "The lab creates a 'log' directory to store the log files: const logDirectory = path.join(__dirname, '..', 'log');"
    },
    {
      "question": "What does the custom JSON format NOT include?",
      "choices": ["Method", "URL", "IP address", "Response status code"],
      "answer": "Response status code",
      "explanation": "The custom JSON format includes method, URL, IP, and exception, but does not explicitly include the response status code."
    },
    {
      "question": "What should be done if logs are not showing up?",
      "choices": ["Restart the server", "Check if the 'log/' directory exists", "Increase log level", "Disable Morgan"],
      "answer": "Check if the 'log/' directory exists",
      "explanation": "One of the troubleshooting tips suggests checking if the 'log/' directory exists and creating it manually if it doesn't."
    }
  ]
}