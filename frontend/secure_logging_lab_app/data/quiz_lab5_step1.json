{
  "questions": [
    {
      "question": "What is the primary purpose of using Morgan in this lab?",
      "choices": [
        "For database management",
        "For logging",
        "For authentication",
        "For routing"
      ],
      "answer": "For logging",
      "explanation": "Morgan is used in this lab for applying secure logging practices in an Express.js application."
    },
    {
      "question": "Which npm package is used to create a rotating log file?",
      "choices": [
        "morgan",
        "fs",
        "rotating-file-stream",
        "path"
      ],
      "answer": "rotating-file-stream",
      "explanation": "The rotating-file-stream package is used to create a new log file periodically, helping manage log size."
    },
    {
      "question": "What is the interval set for rotating log files in this lab?",
      "choices": [
        "6 hours",
        "12 hours",
        "24 hours",
        "48 hours"
      ],
      "answer": "12 hours",
      "explanation": "The lab instructions specify setting up a rotating log stream with a 12-hour interval."
    },
    {
      "question": "Which of the following is NOT a module imported for logging in this lab?",
      "choices": [
        "morgan",
        "fs",
        "path",
        "express"
      ],
      "answer": "express",
      "explanation": "While morgan, fs, and path are imported for logging purposes, express is not mentioned as being imported specifically for logging."
    },
    {
      "question": "What format is used for the custom JSON logging?",
      "choices": [
        "combined",
        "common",
        "dev",
        "jsonFormat"
      ],
      "answer": "jsonFormat",
      "explanation": "The lab defines a custom 'jsonFormat' for logging that includes method, URL, IP, and exceptions."
    },
    {
      "question": "How is an exception simulated in the lab?",
      "choices": [
        "By throwing an error manually",
        "By setting wrong database credentials",
        "By sending an invalid request",
        "By overloading the server"
      ],
      "answer": "By setting wrong database credentials",
      "explanation": "The lab instructs to edit databaseConfig.js and intentionally set wrong credentials to simulate an error."
    },
    {
      "question": "What is the purpose of the custom token 'exception' created in the lab?",
      "choices": [
        "To encrypt log messages",
        "To log custom exception errors",
        "To timestamp log entries",
        "To categorize log types"
      ],
      "answer": "To log custom exception errors",
      "explanation": "The custom 'exception' token is created to include custom exception error messages in the log output."
    },
    {
      "question": "Where are the logs stored in this lab setup?",
      "choices": [
        "In memory",
        "In a database",
        "In a file named log.txt",
        "In the cloud"
      ],
      "answer": "In a file named log.txt",
      "explanation": "The lab sets up logging to a file named log.txt in a 'log' directory."
    },
    {
      "question": "What does Morgan's 'combined' format provide?",
      "choices": [
        "JSON output",
        "XML output",
        "Apache-style log output",
        "Binary output"
      ],
      "answer": "Apache-style log output",
      "explanation": "The lab mentions that using Morgan's 'combined' format results in Apache-style log output in the console."
    },
    {
      "question": "Which of the following is NOT included in the custom JSON log format?",
      "choices": [
        "exception",
        "method",
        "url",
        "user-agent"
      ],
      "answer": "user-agent",
      "explanation": "The custom JSON format defined in the lab includes exception, method, url, and ip, but not user-agent."
    }
  ]
}