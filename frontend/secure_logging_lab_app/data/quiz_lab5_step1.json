{
  "questions": [
    {
      "question": "What is the primary purpose of using Morgan in this lab?",
      "choices": [
        "Database management",
        "User authentication",
        "Secure logging",
        "Performance optimization"
      ],
      "answer": "Secure logging",
      "explanation": "The lab demonstrates how to apply secure logging practices in an Express.js application using Morgan, which is a logging middleware."
    },
    {
      "question": "Which module is used to create rotating log files?",
      "choices": [
        "fs",
        "path",
        "morgan",
        "rotating-file-stream"
      ],
      "answer": "rotating-file-stream",
      "explanation": "The rotating-file-stream module is used to create a rotating log stream, which helps manage log size by creating new log files periodically."
    },
    {
      "question": "What is the purpose of creating a custom token in Morgan?",
      "choices": [
        "To encrypt log data",
        "To log exceptions",
        "To authenticate users",
        "To compress log files"
      ],
      "answer": "To log exceptions",
      "explanation": "A custom token is created to log exceptions, allowing for the inclusion of error messages in the log entries."
    },
    {
      "question": "How often are log files rotated in this lab setup?",
      "choices": [
        "Every 6 hours",
        "Every 12 hours",
        "Every 24 hours",
        "Every week"
      ],
      "answer": "Every 12 hours",
      "explanation": "The lab sets up a rotating log stream with a 12-hour interval using the configuration `interval: '12h'`."
    },
    {
      "question": "What format is used for structuring log entries in this lab?",
      "choices": [
        "XML",
        "CSV",
        "JSON",
        "Plain text"
      ],
      "answer": "JSON",
      "explanation": "The lab defines a custom JSON format for log entries, which includes method, URL, IP, and exceptions."
    },
    {
      "question": "Which of the following is NOT included in the custom JSON log format?",
      "choices": [
        "Exception",
        "Method",
        "URL",
        "Response status code"
      ],
      "answer": "Response status code",
      "explanation": "The custom JSON format includes exception, method, URL, IP, and date, but not the response status code."
    },
    {
      "question": "What is the purpose of setting 'res.locals.errorMessage' in the routes?",
      "choices": [
        "To display errors to users",
        "To log exceptions",
        "To handle database errors",
        "To validate user input"
      ],
      "answer": "To log exceptions",
      "explanation": "Setting 'res.locals.errorMessage' allows the custom Morgan token to capture and log exception messages."
    },
    {
      "question": "Which Node.js core modules are used in this lab for log directory management?",
      "choices": [
        "http and net",
        "fs and path",
        "crypto and os",
        "stream and buffer"
      ],
      "answer": "fs and path",
      "explanation": "The fs (File System) and path modules are used to manage the log directory and ensure it exists before writing logs."
    },
    {
      "question": "What security consideration is mentioned regarding logging?",
      "choices": [
        "Encrypting log files",
        "Using HTTPS for logging",
        "Avoiding sensitive information in logs",
        "Implementing log rotation"
      ],
      "answer": "Avoiding sensitive information in logs",
      "explanation": "The lab mentions that exposing logs improperly may leak sensitive information, highlighting the importance of careful log management."
    },
    {
      "question": "What should be done if Morgan is not logging as expected?",
      "choices": [
        "Reinstall Node.js",
        "Change the log format",
        "Apply Morgan middleware after body parser and before routes",
        "Increase server memory"
      ],
      "answer": "Apply Morgan middleware after body parser and before routes",
      "explanation": "The troubleshooting tips suggest ensuring that Morgan middleware is applied after the body parser and before the routes for proper logging."
    }
  ]
}